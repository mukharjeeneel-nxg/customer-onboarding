{"ast":null,"code":"var _jsxFileName = \"/home/nxg3/new-nxgecom/react-frontend/src/Screens/Contactscreen.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button, Container, Col, Row, Card } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport FooterScreen from \"./FooterScreen\";\nimport { ContactAction } from \"../actions/ContactAction\";\nimport MessageBox from \"./messageBox\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport HeaderScreen from \"./HeaderScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ContactScreen() {\n  _s();\n\n  const dispatch = useDispatch();\n  const contactDetails = useSelector(state => state.contactSubmit);\n  const {\n    contactInfo,\n    loading\n  } = contactDetails;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [nameError, setNameError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const [verified, setVerified] = useState(false);\n\n  function onChange(value) {\n    console.log(\"Captcha value\", value);\n    setVerified(true);\n  }\n\n  function mobileValidation(value) {\n    const re = /^[0-9\\b]+$/;\n\n    if (value.length === 10) {\n      if (value === \"\" | re.test(value)) {\n        setPhoneError(\"\");\n        setPhone(value);\n      }\n    } else {\n      if (value === \"\" | re.test(value)) {\n        setPhone(value);\n        setPhoneError(\"Invalid mobile input!\");\n      }\n    }\n  }\n\n  const submitContact = e => {\n    const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (name == \"\" || name.length > 120) {\n      setNameError(\"Enter a valid name!\");\n      return false;\n    } else {\n      setNameError(\"\");\n\n      if (re.test(email)) {\n        setEmailError(\"\");\n\n        if (phone.length == 10) {\n          setPhoneError(\"\");\n          console.log(\"contact\", name, email, phone, message);\n\n          if (setVerified) {\n            dispatch(ContactAction(name, email, phone, message));\n          }\n        } else {\n          setPhoneError(\"Enter valid mobile number!\");\n        }\n      } else {\n        setEmailError(\"Invalid Email Address\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    if (loading) {} else if (contactInfo != null) {\n      if (contactInfo.response_code == 1) {\n        setName(\"\");\n        setEmail(\"\");\n        setPhone(\"\");\n        setMessage(\"\");\n      }\n    }\n  }, [contactInfo]);\n  console.log(\"response code\", contactInfo);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ContactScreen, \"HYc/HeWif9rRmox4/b2CruRWGNc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ContactScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactScreen\");","map":{"version":3,"names":["Form","Button","Container","Col","Row","Card","useState","useEffect","useDispatch","useSelector","FooterScreen","ContactAction","MessageBox","ReCAPTCHA","HeaderScreen","ContactScreen","dispatch","contactDetails","state","contactSubmit","contactInfo","loading","name","setName","email","setEmail","phone","setPhone","message","setMessage","emailError","setEmailError","nameError","setNameError","phoneError","setPhoneError","verified","setVerified","onChange","value","console","log","mobileValidation","re","length","test","submitContact","e","window","scrollTo","response_code"],"sources":["/home/nxg3/new-nxgecom/react-frontend/src/Screens/Contactscreen.js"],"sourcesContent":["import { Form, Button, Container, Col, Row, Card } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport FooterScreen from \"./FooterScreen\";\nimport { ContactAction } from \"../actions/ContactAction\";\nimport MessageBox from \"./messageBox\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport HeaderScreen from \"./HeaderScreen\";\n\n\nexport default function ContactScreen() {\n  const dispatch = useDispatch();\n  const contactDetails = useSelector((state) => state.contactSubmit);\n  const { contactInfo, loading } = contactDetails;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [nameError, setNameError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const [verified,setVerified]=useState(false)\n  function onChange(value){\n    console.log(\"Captcha value\",value)\n    setVerified(true)\n  }\n\n  function mobileValidation(value) {\n    const re = /^[0-9\\b]+$/;\n\n    if (value.length === 10) {\n      if ((value === \"\") | re.test(value)) {\n        setPhoneError(\"\");\n        setPhone(value);\n      }\n    } else {\n      if ((value === \"\") | re.test(value)) {\n        setPhone(value);\n        setPhoneError(\"Invalid mobile input!\");\n      }\n    }\n  }\n  const submitContact = (e) => {\n    const re =\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (name == \"\" || name.length > 120) {\n      setNameError(\"Enter a valid name!\");\n      return false;\n    } else {\n      setNameError(\"\");\n      if (re.test(email)) {\n        setEmailError(\"\");\n\n        if (phone.length == 10) {\n          setPhoneError(\"\");\n          console.log(\"contact\", name, email, phone, message);\n          if(setVerified){\n          dispatch(ContactAction(name, email, phone, message));}\n        } else {\n          setPhoneError(\"Enter valid mobile number!\");\n        }\n      } else {\n        setEmailError(\"Invalid Email Address\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    if (loading) {\n    } else if (contactInfo != null) {\n      if (contactInfo.response_code == 1) {\n        setName(\"\");\n        setEmail(\"\");\n        setPhone(\"\");\n        setMessage(\"\");\n      }\n    }\n  }, [contactInfo]);\n  console.log(\"response code\", contactInfo);\n  return (\n    <>\n      <HeaderScreen />\n           \n      <FooterScreen></FooterScreen>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}