{"ast":null,"code":"// //name lim 120 alpha numeric\n// //email address lim 250 var char\n// //contact no. lim 10 digit\n// //message text area lim 500 char\n// // submit button\n// import NavigationScreen from \"./NavigationScreen\";\n// import { Form, Button, Container, Col, Row, Card } from \"react-bootstrap\";\n// import { useState, useEffect } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { useSelector } from \"react-redux\";\n// import FooterScreen from \"./FooterScreen\";\n// import { ContactAction } from \"../actions/ContactAction\";\n// import MessageBox from \"./messageBox\";\n// import ReCAPTCHA from \"react-google-recaptcha\";\n// export default function ContactScreen() {\n//   const dispatch = useDispatch();\n//   const contactDetails = useSelector((state) => state.contactSubmit);\n//   const { contactInfo, loading } = contactDetails;\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [emailError, setEmailError] = useState(\"\");\n//   const [nameError, setNameError] = useState(\"\");\n//   const [phoneError, setPhoneError] = useState(\"\");\n//   const [verified,setVerified]=useState(false)\n//   function onChange(value){\n//     console.log(\"Captcha value\",value)\n//     setVerified(true)\n//   }\n//   function mobileValidation(value) {\n//     const re = /^[0-9\\b]+$/;\n//     if (value.length === 10) {\n//       if ((value === \"\") | re.test(value)) {\n//         setPhoneError(\"\");\n//         setPhone(value);\n//       }\n//     } else {\n//       if ((value === \"\") | re.test(value)) {\n//         setPhone(value);\n//         setPhoneError(\"Invalid mobile input!\");\n//       }\n//     }\n//   }\n//   const submitContact = (e) => {\n//     const re =\n//       /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n//     if (name == \"\" || name.length > 120) {\n//       setNameError(\"Enter a valid name!\");\n//       return false;\n//     } else {\n//       setNameError(\"\");\n//       if (re.test(email)) {\n//         setEmailError(\"\");\n//         if (phone.length == 10) {\n//           setPhoneError(\"\");\n//           console.log(\"contact\", name, email, phone, message);\n//           if(setVerified){\n//           dispatch(ContactAction(name, email, phone, message));}\n//         } else {\n//           setPhoneError(\"Enter valid mobile number!\");\n//         }\n//       } else {\n//         setEmailError(\"Invalid Email Address\");\n//       }\n//     }\n//   };\n//   useEffect(() => {\n//     window.scrollTo(0, 0);\n//     if (loading) {\n//     } else if (contactInfo != null) {\n//       if (contactInfo.response_code == 1) {\n//         setName(\"\");\n//         setEmail(\"\");\n//         setPhone(\"\");\n//         setMessage(\"\");\n//       }\n//     }\n//   }, [contactInfo]);\n//   console.log(\"response code\", contactInfo);\n//   return (\n//     <>\n//       <NavigationScreen />\n//       <Container>\n//         <Row>\n//           <br />\n//         </Row>\n//         <Row>\n//           <Col lg=\"12\" className=\"core-features\">\n//             <img src=\"https://www.nxgsols.com/img/svg/section-icon-2.svg\" />\n//             <h1 style={{ padding: \"13px\" }}>Contact </h1>\n//           </Col>\n//         </Row>\n//         <Row>\n//           <Col lg=\"3\"></Col>\n//           <Col sm=\"12\" lg=\"6\">\n//             <br />\n//             <h3>Contact Details</h3>\n//             <p>\n//               Enter your details <span>so that</span> we can contact you!\n//             </p>\n//             <Card>\n//               <Card.Body>\n//                 <Form>\n//                   <Row className=\"mb-3\">\n//                     <Form.Group as={Col} md=\"12\">\n//                       {/* Not in use */}\n//                     </Form.Group>\n//                   </Row>\n//                   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//                     {loading ? (\n//                       \"\"\n//                     ) : contactInfo == null ? (\n//                       \"\"\n//                     ) : contactInfo.response_code == 1 ? (\n//                       <center>\n//                         {\" \"}\n//                         <MessageBox\n//                           msg=\"Submitted successfully!\"\n//                           alert=\"success\"\n//                         ></MessageBox>\n//                       </center>\n//                     ) : contactInfo.response_code == 0 ? (\n//                       <MessageBox\n//                         msg=\"Email Address already in use!\"\n//                         alert=\"danger\"\n//                       ></MessageBox>\n//                     ) : (\n//                       \"\"\n//                     )}\n//                     <Form.Label>\n//                       Enter your name <span className=\"required-span\">*</span>\n//                     </Form.Label>\n//                     <Form.Control\n//                       type=\"text\"\n//                       value={name}\n//                       onChange={(e) => setName(e.target.value)}\n//                       placeholder=\"Enter your full name\"\n//                       required\n//                     />\n//                     <span style={{ color: \"red\" }}>{nameError}</span>\n//                   </Form.Group>\n//                   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//                     <Form.Label>\n//                       Enter email address{\" \"}\n//                       <span className=\"required-span\">*</span>\n//                     </Form.Label>\n//                     <Form.Control\n//                       type=\"text\"\n//                       value={email}\n//                       onChange={(e) => setEmail(e.target.value)}\n//                       placeholder=\"Enter your email address\"\n//                       required\n//                     />\n//                     <span style={{ color: \"red\" }}>{emailError}</span>\n//                   </Form.Group>\n//                   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//                     <Form.Label>\n//                       Enter Mobile no.<span className=\"required-span\">*</span>\n//                     </Form.Label>\n//                     <Form.Control\n//                       className=\"phn-num\"\n//                       type=\"text\"\n//                       id=\"\"\n//                       name=\"\"\n//                       maxLength={10}\n//                       min=\"0\"\n//                       value={phone}\n//                       onChange={(e) => mobileValidation(e.target.value)}\n//                       placeholder=\"9179******\"\n//                       name=\"\"\n//                     />\n//                     <span style={{ color: \"red\" }}>{phoneError}</span>\n//                   </Form.Group>\n//                   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//                     <Form.Label>Message:-</Form.Label>\n//                     <Form.Control\n//                       type=\"input\"\n//                       value={message}\n//                       onChange={(e) => setMessage(e.target.value)}\n//                       placeholder=\"type here...\"\n//                     />\n//                   </Form.Group>\n//                   <br />\n//                 <center>  <ReCAPTCHA\n//         sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n//         onChange={onChange}\n//       /></center>  <br/>\n//                   <center>\n//                     {\" \"}\n//                     <Button\n//                       onClick={(e) => submitContact(e)}\n//                       variant=\"primary\"\n//                       disabled={loading ? \"disabled\" : \"\"}\n//                     >\n//                       {loading\n//                         ? \"Please wait submitting your details..\"\n//                         : \"Submit your details\"}\n//                     </Button>{\" \"}\n//                   </center>\n//                 </Form>\n//               </Card.Body>\n//             </Card>\n//           </Col>\n//         </Row>\n//         <Row>\n//           <br /> <br />\n//         </Row>\n//         <Row>\n//           <Col lg=\"6\" sm=\"12\">\n//             <div className=\"hero-section-2\">\n//               <h2>\n//                 We're here to support you. If you're looking for help you've\n//                 come to the right place.\n//               </h2>\n//               <p>\n//                 In 2014, NXG Solutions pioneered and envisioned next generations\n//                 smart robotics systems with an ambition to make human life\n//                 better and healthier through a sustainable robotics and computer\n//                 vision. Finally, in 2017 NXG Solution founded in Alpharetta,\n//                 Atlanta Metropolitan in USA with vision and mission to build\n//                 innovative products for mankind to ease their life in three key\n//                 areas Robotics, Artificial Intelligence and Digital space by\n//                 applying next generations technologies.\n//               </p>\n//               <p>\n//                 Due to increasing customer demands and economical solutions &\n//                 services, NXG Solutions open its delivery center in the\n//                 Chattisgath State Capital City Raipur in India.\n//               </p>\n//             </div>\n//           </Col>\n//           <Col lg=\"6\" sm=\"12\">\n//             <div className=\"hero-image-section-2\">\n//               <img\n//                 className=\"hero-image\"\n//                 src=\"https://www.nxgsols.com/img/svg/about1.svg\"\n//               />\n//             </div>\n//           </Col>\n//         </Row>\n//       </Container>\n//       <FooterScreen></FooterScreen>\n//     </>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/home/nxg3/new-nxgecom/react-frontend/src/Screens/Contactscreen.js"],"sourcesContent":["// //name lim 120 alpha numeric\n// //email address lim 250 var char\n// //contact no. lim 10 digit\n// //message text area lim 500 char\n// // submit button\n// import NavigationScreen from \"./NavigationScreen\";\n// import { Form, Button, Container, Col, Row, Card } from \"react-bootstrap\";\n// import { useState, useEffect } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { useSelector } from \"react-redux\";\n// import FooterScreen from \"./FooterScreen\";\n// import { ContactAction } from \"../actions/ContactAction\";\n// import MessageBox from \"./messageBox\";\n// import ReCAPTCHA from \"react-google-recaptcha\";\n\n\n// export default function ContactScreen() {\n//   const dispatch = useDispatch();\n//   const contactDetails = useSelector((state) => state.contactSubmit);\n//   const { contactInfo, loading } = contactDetails;\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [emailError, setEmailError] = useState(\"\");\n//   const [nameError, setNameError] = useState(\"\");\n//   const [phoneError, setPhoneError] = useState(\"\");\n//   const [verified,setVerified]=useState(false)\n//   function onChange(value){\n//     console.log(\"Captcha value\",value)\n//     setVerified(true)\n//   }\n\n//   function mobileValidation(value) {\n//     const re = /^[0-9\\b]+$/;\n\n//     if (value.length === 10) {\n//       if ((value === \"\") | re.test(value)) {\n//         setPhoneError(\"\");\n//         setPhone(value);\n//       }\n//     } else {\n//       if ((value === \"\") | re.test(value)) {\n//         setPhone(value);\n//         setPhoneError(\"Invalid mobile input!\");\n//       }\n//     }\n//   }\n//   const submitContact = (e) => {\n//     const re =\n//       /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n//     if (name == \"\" || name.length > 120) {\n//       setNameError(\"Enter a valid name!\");\n//       return false;\n//     } else {\n//       setNameError(\"\");\n//       if (re.test(email)) {\n//         setEmailError(\"\");\n\n//         if (phone.length == 10) {\n//           setPhoneError(\"\");\n//           console.log(\"contact\", name, email, phone, message);\n//           if(setVerified){\n//           dispatch(ContactAction(name, email, phone, message));}\n//         } else {\n//           setPhoneError(\"Enter valid mobile number!\");\n//         }\n//       } else {\n//         setEmailError(\"Invalid Email Address\");\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     window.scrollTo(0, 0);\n\n//     if (loading) {\n//     } else if (contactInfo != null) {\n//       if (contactInfo.response_code == 1) {\n//         setName(\"\");\n//         setEmail(\"\");\n//         setPhone(\"\");\n//         setMessage(\"\");\n//       }\n//     }\n//   }, [contactInfo]);\n//   console.log(\"response code\", contactInfo);\n//   return (\n//     <>\n//       <NavigationScreen />\n//       <Container>\n//         <Row>\n//           <br />\n//         </Row>\n\n//         <Row>\n//           <Col lg=\"12\" className=\"core-features\">\n//             <img src=\"https://www.nxgsols.com/img/svg/section-icon-2.svg\" />\n//             <h1 style={{ padding: \"13px\" }}>Contact </h1>\n//           </Col>\n//         </Row>\n\n//         <Row>\n//           <Col lg=\"3\"></Col>\n\n//           <Col sm=\"12\" lg=\"6\">\n//             <br />\n//             <h3>Contact Details</h3>\n//             <p>\n//               Enter your details <span>so that</span> we can contact you!\n//             </p>\n//             <Card>\n//               <Card.Body>\n//                 <Form>\n//                   <Row className=\"mb-3\">\n//                     <Form.Group as={Col} md=\"12\">\n//                       {/* Not in use */}\n//                     </Form.Group>\n//                   </Row>\n//                   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//                     {loading ? (\n//                       \"\"\n//                     ) : contactInfo == null ? (\n//                       \"\"\n//                     ) : contactInfo.response_code == 1 ? (\n//                       <center>\n//                         {\" \"}\n//                         <MessageBox\n//                           msg=\"Submitted successfully!\"\n//                           alert=\"success\"\n//                         ></MessageBox>\n//                       </center>\n//                     ) : contactInfo.response_code == 0 ? (\n//                       <MessageBox\n//                         msg=\"Email Address already in use!\"\n//                         alert=\"danger\"\n//                       ></MessageBox>\n//                     ) : (\n//                       \"\"\n//                     )}\n\n//                     <Form.Label>\n//                       Enter your name <span className=\"required-span\">*</span>\n//                     </Form.Label>\n//                     <Form.Control\n//                       type=\"text\"\n//                       value={name}\n//                       onChange={(e) => setName(e.target.value)}\n//                       placeholder=\"Enter your full name\"\n//                       required\n//                     />\n//                     <span style={{ color: \"red\" }}>{nameError}</span>\n//                   </Form.Group>\n//                   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//                     <Form.Label>\n//                       Enter email address{\" \"}\n//                       <span className=\"required-span\">*</span>\n//                     </Form.Label>\n//                     <Form.Control\n//                       type=\"text\"\n//                       value={email}\n//                       onChange={(e) => setEmail(e.target.value)}\n//                       placeholder=\"Enter your email address\"\n//                       required\n//                     />\n//                     <span style={{ color: \"red\" }}>{emailError}</span>\n//                   </Form.Group>\n//                   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//                     <Form.Label>\n//                       Enter Mobile no.<span className=\"required-span\">*</span>\n//                     </Form.Label>\n//                     <Form.Control\n//                       className=\"phn-num\"\n//                       type=\"text\"\n//                       id=\"\"\n//                       name=\"\"\n//                       maxLength={10}\n//                       min=\"0\"\n//                       value={phone}\n//                       onChange={(e) => mobileValidation(e.target.value)}\n//                       placeholder=\"9179******\"\n//                       name=\"\"\n//                     />\n//                     <span style={{ color: \"red\" }}>{phoneError}</span>\n//                   </Form.Group>\n//                   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//                     <Form.Label>Message:-</Form.Label>\n//                     <Form.Control\n//                       type=\"input\"\n//                       value={message}\n//                       onChange={(e) => setMessage(e.target.value)}\n//                       placeholder=\"type here...\"\n//                     />\n//                   </Form.Group>\n//                   <br />\n//                 <center>  <ReCAPTCHA\n      \n//         sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n//         onChange={onChange}\n//       /></center>  <br/>\n//                   <center>\n//                     {\" \"}\n//                     <Button\n//                       onClick={(e) => submitContact(e)}\n//                       variant=\"primary\"\n//                       disabled={loading ? \"disabled\" : \"\"}\n//                     >\n//                       {loading\n//                         ? \"Please wait submitting your details..\"\n//                         : \"Submit your details\"}\n//                     </Button>{\" \"}\n//                   </center>\n//                 </Form>\n//               </Card.Body>\n//             </Card>\n//           </Col>\n//         </Row>\n//         <Row>\n//           <br /> <br />\n//         </Row>\n//         <Row>\n//           <Col lg=\"6\" sm=\"12\">\n//             <div className=\"hero-section-2\">\n//               <h2>\n//                 We're here to support you. If you're looking for help you've\n//                 come to the right place.\n//               </h2>\n//               <p>\n//                 In 2014, NXG Solutions pioneered and envisioned next generations\n//                 smart robotics systems with an ambition to make human life\n//                 better and healthier through a sustainable robotics and computer\n//                 vision. Finally, in 2017 NXG Solution founded in Alpharetta,\n//                 Atlanta Metropolitan in USA with vision and mission to build\n//                 innovative products for mankind to ease their life in three key\n//                 areas Robotics, Artificial Intelligence and Digital space by\n//                 applying next generations technologies.\n//               </p>\n//               <p>\n//                 Due to increasing customer demands and economical solutions &\n//                 services, NXG Solutions open its delivery center in the\n//                 Chattisgath State Capital City Raipur in India.\n//               </p>\n//             </div>\n//           </Col>\n//           <Col lg=\"6\" sm=\"12\">\n//             <div className=\"hero-image-section-2\">\n//               <img\n//                 className=\"hero-image\"\n//                 src=\"https://www.nxgsols.com/img/svg/about1.svg\"\n//               />\n//             </div>\n//           </Col>\n//         </Row>\n//       </Container>\n//       <FooterScreen></FooterScreen>\n//     </>\n//   );\n// }\n"],"mappings},"metadata":{},"sourceType":"module"}